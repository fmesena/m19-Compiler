%option c++ prefix="m19_scanner_" outfile="m19_scanner.cpp"
%option stack noyywrap yylineno 8bit debug
%{ 
// make relevant includes before including the parser's tab file
#include <string>
#include <cdk/ast/sequence_node.h>
#include <cdk/ast/expression_node.h>
#include <cdk/ast/lvalue_node.h>
#include "m19_parser.tab.h"

// don't change this
#define yyerror LexerError

#include <iostream>
#include <math.h>
%}
%x X_STRING X_BARRA
%x X_COMMENT
%X X_BZERO X_IGNORA X_SEGUINTE

%%
    {set_debug(1);}

 /*-----------------------------------------------------------------------------------------*/
 /*----------------------------------Comentarios--------------------------------------------*/
"//"                ;

"/*"                yy_push_state(X_COMMENT);
<X_COMMENT>"/*"     yy_push_state(X_COMMENT);
<X_COMMENT>"*/"     yy_pop_state();
<X_COMMENT>.|\n     ;
 
 /*-----------------------------------------------------------------------------------------*/
 /*----------------------------------CadeiaDeCaracteres-------------------------------------*/
\"                     yy_push_state(X_STRING); yylval.s = new std::string("");
<X_STRING>\"           yy_pop_state(); return tSTRING;
<X_STRING>\\\"         *yylval.s += yytext + 1;
<X_STRING>.            *yylval.s += yytext;

<X_STRING>\\            yy_push_state(X_BARRA);
<X_BARRA>0              yy_push_state(X_BZERO);
<X_BARRA>n              yy_pop_state();
<X_BARRA>r              yy_pop_state();
<X_BARRA>t              yy_pop_state();
<X_BARRA>\\\"           yy_pop_state();
<X_BARRA>\\\\           yy_pop_state();
                        
<X_BARRA>.              *yylval.s += yytext; yy_pop_state();

<X_BZERO>[A-Fa-f0-9]{2} *yylval.s += '\0'; *yylval.s += yytext[yyleng-2]; yy_pop_state();
<X_BZERO>[A-Fa-f0-9]{1} *yylval.s += '\\'; *yylval.s += yytext[yyleng-2]; yy_pop_state();
<X_BZERO>[G-Zg-z]       yy_push_state(X_IGNORA);

<X_IGNORA>\"            yy_pop_state(); yy_pop_state(); yy_pop_state(); yy_pop_state(); return tSTRING;
<X_IGNORA>.             ;

 /*-----------------------------------------------------------------------------------------*/
 /*----------------------------------Inteiros-----------------------------------------------*/
 /*hexadecimais*/
0x[A-Fa-f0-9]+             yylval.i = strtol(yytext, nullptr, 16); return tINTEGER;
0x[A-Za-z0-9]+             yyerror("Invalid base 16 number");

 /*decimais*/
[0-9]+                     yylval.i = strtol(yytext, nullptr, 10); return tINTEGER;

 /*-----------------------------------------------------------------------------------------*/
 /*-----------------------------------Reais em Virgula Flutuante----------------------------*/
[0-9]+\.[0-9]+          yylval.d = strtod(yytext, nullptr); return tREAL;



 /*-----------------------------------------------------------------------------------------*/
 /*------------------------------------Identificadores--------------------------------------*/
[A-Za-z][A-Za-z0-9_]*  yylval.s = new std::string(yytext); return tID;

 /*-----------------------------------------------------------------------------------------*/
 /*------------------------------------Delimitadores/Terminadores---------------------------*/
 
 /*-----------------------------------------------------------------------------------------*/
 /*------------------------------------Expressoes-------------------------------------------*/ 
">="                   return tGE; 
"<="                   return tLE; 
"=="                   return tEQ; 
"!="                   return tNE;

"~"                    return tNOT;
"&&"                   return tAND;
"||"                   return tOR;
 
"!!"                   return tPRINTLN;

">>@"                  return tBREAK;
"@>>"                  return tCONTINUE;
">@<"                  return tRETURN;

">>"                   return tGG;
"<<"                   return tLL;


 /*"<"                         yy_push_state(X_EXPRL); 
<X_EXPRL>"\\"|"/"|"/"|\"  yy_pop_state(); yyerror("Invalid"); //falta asterisco no fechar comentario

<X_EXPRL>"#"|"%"|"$"    yy_push_state(); 
<X_EXPRL>">"            yy_pop_state(); return tPOINTER;*/

 /*-----------------------------------------------------------------------------------------*/
[-()<>=+*/%;{}.!#?$\[\]:,@]      return *yytext;

[ \t\n]+               ; /* ignore whitespace */

.                      yyerror("Unknown character");

%%
